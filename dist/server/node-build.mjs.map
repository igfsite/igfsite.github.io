{"version":3,"file":"node-build.mjs","sources":["../../server/routes/demo.ts","../../server/routes/register.ts","../../server/routes/contact.ts","../../server/index.ts","../../server/node-build.ts"],"sourcesContent":["import { RequestHandler } from \"express\";\nimport { DemoResponse } from \"@shared/api\";\n\nexport const handleDemo: RequestHandler = (req, res) => {\n  const response: DemoResponse = {\n    message: \"Hello from Express server\",\n  };\n  res.status(200).json(response);\n};\n","import { RequestHandler } from \"express\";\nimport { z } from \"zod\";\nimport type { RegistrationPayload, RegistrationResponse } from \"@shared/api\";\n\nconst registrationSchema = z\n  .object({\n    fullName: z.string().min(2).max(120),\n    email: z.string().email(),\n    phone: z.string().min(7).max(20).optional().or(z.literal(\"\")),\n    organization: z.string().max(160).optional().or(z.literal(\"\")),\n    role: z.enum([\n      \"student\",\n      \"teacher\",\n      \"parent\",\n      \"volunteer\",\n      \"partner\",\n      \"other\",\n    ]),\n    interest: z.enum([\"event\", \"volunteer\", \"partner\"]).optional(),\n    student1Name: z.string().max(120).optional().or(z.literal(\"\")),\n    student1Email: z.string().email().optional().or(z.literal(\"\")),\n    student2Name: z.string().max(120).optional().or(z.literal(\"\")),\n    student2Email: z.string().email().optional().or(z.literal(\"\")),\n    notes: z.string().max(1000).optional().or(z.literal(\"\")),\n  })\n  .superRefine((data, ctx) => {\n    const isEvent = !data.interest || data.interest === \"event\";\n    if (isEvent) {\n      if (!data.student1Name || data.student1Name.trim().length < 2) {\n        ctx.addIssue({\n          code: z.ZodIssueCode.custom,\n          message: \"Student 1 name is required\",\n          path: [\"student1Name\"],\n        });\n      }\n      if (\n        !data.student1Email ||\n        !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(data.student1Email)\n      ) {\n        ctx.addIssue({\n          code: z.ZodIssueCode.custom,\n          message: \"Valid email required\",\n          path: [\"student1Email\"],\n        });\n      }\n      if (!data.student2Name || data.student2Name.trim().length < 2) {\n        ctx.addIssue({\n          code: z.ZodIssueCode.custom,\n          message: \"Student 2 name is required\",\n          path: [\"student2Name\"],\n        });\n      }\n      if (\n        !data.student2Email ||\n        !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(data.student2Email)\n      ) {\n        ctx.addIssue({\n          code: z.ZodIssueCode.custom,\n          message: \"Valid email required\",\n          path: [\"student2Email\"],\n        });\n      }\n    }\n  });\n\nexport const handleRegister: RequestHandler = (req, res) => {\n  const parsed = registrationSchema.safeParse(req.body as RegistrationPayload);\n  if (!parsed.success) {\n    return res\n      .status(400)\n      .json({\n        success: false,\n        message: \"Invalid input\",\n        errors: parsed.error.flatten(),\n      });\n  }\n\n  const data = parsed.data;\n\n  // Simulate persistence by creating a simple reference id and logging. Replace with DB/email later.\n  const id =\n    `REG-${Date.now().toString(36)}-${Math.random().toString(36).slice(2, 6)}`.toUpperCase();\n  // eslint-disable-next-line no-console\n  console.log(\"New registration:\", { id, ...data });\n\n  const response: RegistrationResponse = {\n    success: true,\n    message: \"Registration received. We will contact you shortly.\",\n    id,\n  };\n  res.status(200).json(response);\n};\n","import { RequestHandler } from \"express\";\nimport { z } from \"zod\";\nimport type { ContactPayload, ContactResponse } from \"@shared/api\";\n\nconst contactSchema = z.object({\n  name: z.string().min(2).max(120),\n  email: z.string().email(),\n  subject: z.string().min(2).max(160),\n  message: z.string().min(10).max(2000),\n});\n\nexport const handleContact: RequestHandler = (req, res) => {\n  const parsed = contactSchema.safeParse(req.body as ContactPayload);\n  if (!parsed.success) {\n    return res\n      .status(400)\n      .json({\n        success: false,\n        message: \"Invalid input\",\n        errors: parsed.error.flatten(),\n      });\n  }\n  const id =\n    `MSG-${Date.now().toString(36)}-${Math.random().toString(36).slice(2, 6)}`.toUpperCase();\n  // eslint-disable-next-line no-console\n  console.log(\"New contact message:\", { id, ...parsed.data });\n  const response: ContactResponse = {\n    success: true,\n    message: \"Thanks for contacting us.\",\n    id,\n  };\n  res.status(200).json(response);\n};\n","import \"dotenv/config\";\nimport express from \"express\";\nimport cors from \"cors\";\nimport { handleDemo } from \"./routes/demo\";\nimport { handleRegister } from \"./routes/register\";\nimport { handleContact } from \"./routes/contact\";\n\nexport function createServer() {\n  const app = express();\n\n  // Middleware\n  app.use(cors());\n  app.use(express.json());\n  app.use(express.urlencoded({ extended: true }));\n\n  // Example API routes\n  app.get(\"/api/ping\", (_req, res) => {\n    const ping = process.env.PING_MESSAGE ?? \"ping\";\n    res.json({ message: ping });\n  });\n\n  app.get(\"/api/demo\", handleDemo);\n  app.post(\"/api/register\", handleRegister);\n  app.post(\"/api/contact\", handleContact);\n\n  return app;\n}\n","import path from \"path\";\nimport { createServer } from \"./index\";\nimport * as express from \"express\";\n\nconst app = createServer();\nconst port = process.env.PORT || 3000;\n\n// In production, serve the built SPA files\nconst __dirname = import.meta.dirname;\nconst distPath = path.join(__dirname, \"../spa\");\n\n// Serve static files\napp.use(express.static(distPath));\n\n// Handle React Router - serve index.html for all non-API routes\napp.get(/^\\/(?!api|health).*/, (req, res) => {\n  res.sendFile(path.join(distPath, \"index.html\"));\n});\n\napp.listen(port, () => {\n  console.log(`ðŸš€ Fusion Starter server running on port ${port}`);\n  console.log(`ðŸ“± Frontend: http://localhost:${port}`);\n  console.log(`ðŸ”§ API: http://localhost:${port}/api`);\n});\n\n// Graceful shutdown\nprocess.on(\"SIGTERM\", () => {\n  console.log(\"ðŸ›‘ Received SIGTERM, shutting down gracefully\");\n  process.exit(0);\n});\n\nprocess.on(\"SIGINT\", () => {\n  console.log(\"ðŸ›‘ Received SIGINT, shutting down gracefully\");\n  process.exit(0);\n});\n"],"names":["app","express"],"mappings":"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"}